// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SidebarNav /> should render the connected component correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Connect(SidebarNavigation) />,
  "nodes": Array [
    <Connect(SidebarNavigation) />,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Provider
        store={
                Object {
                        "boards": Array [],
                        "currentBoard": Object {
                          "boardId": 0,
                          "owner": "",
                          "repoName": "",
                          "repoUrl": "",
                          "teamName": "",
                        },
                        "gitHandle": "something",
                        "profilePicture": "someUrl",
                      }
        }
>
        <Connect(SidebarNavigation) />
</Provider>,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Provider {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "children": <Connect(SidebarNavigation) />,
          "store": Object {
            "boards": Array [],
            "currentBoard": Object {
              "boardId": 0,
              "owner": "",
              "repoName": "",
              "repoUrl": "",
              "teamName": "",
            },
            "gitHandle": "something",
            "profilePicture": "someUrl",
          },
        },
        "refs": Object {},
        "state": null,
        "store": Object {
          "boards": Array [],
          "currentBoard": Object {
            "boardId": 0,
            "owner": "",
            "repoName": "",
            "repoUrl": "",
            "teamName": "",
          },
          "gitHandle": "something",
          "profilePicture": "someUrl",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Connect(SidebarNavigation) />,
        "_debugID": 4,
        "_renderedOutput": <Connect(SidebarNavigation) />,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Provider
    store={
        Object {
            "boards": Array [],
            "currentBoard": Object {
              "boardId": 0,
              "owner": "",
              "repoName": "",
              "repoUrl": "",
              "teamName": "",
            },
            "gitHandle": "something",
            "profilePicture": "someUrl",
          }
    }
>
    <Connect(SidebarNavigation) />
</Provider>,
}
`;

exports[`<SidebarNav /> should render the unconnected component correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    This is SidebarNavigation
</div>,
  "nodes": Array [
    <div>
      This is SidebarNavigation
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <SidebarNavigation />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          This is SidebarNavigation
</div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          This is SidebarNavigation
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <SidebarNavigation />,
}
`;
